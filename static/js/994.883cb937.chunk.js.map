{"version":3,"file":"static/js/994.883cb937.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","redux/filter/selectors.js","redux/selectors.js","components/ContactList/Contact/Contact.styled.js","components/ContactList/Contact/Contact.js","components/ContactList/ContactsList.styled.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","components/ContactEditor/ContactEditor.styled.js","components/ContactEditor/ContactEditor.jsx","pages/Contacts.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","export const selectFilter = state => state.filters;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from './contacts/selectors';\nimport { selectFilter } from './filter/selectors';\n\nexport const getFilterList = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import styled from 'styled-components';\n\nexport const ContactListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* gap: 200px; */\n  background: #2ee59d;\n\n  p {\n    font-family: inherit;\n    font-size: 14px;\n    font-weight: 700;\n  }\n\n  span {\n    margin-left: 10px;\n  }\n\n  button {\n    border: none;\n    border-radius: 4px;\n    min-width: 45px;\n\n    background-color: #2196f3;\n    color: #ffffff;\n\n    font-family: inherit;\n    font-size: 12px;\n\n    text-align: center;\n\n    cursor: pointer;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n      background-color: #2196f3;\n      color: #ffffff;\n      box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1),\n        0px 1px 2px rgba(0, 0, 0, 0.08), 0px 2px 2px rgba(0, 0, 0, 0.12);\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ContactListItem } from 'components/ContactList/Contact/Contact.styled';\nimport { useState } from 'react';\n\nexport default function Contact({ id, name, number }) {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    setIsDeleting(true);\n    dispatch(deleteContact(id));\n  };\n  const [isDeleting, setIsDeleting] = useState(false);\n  return (\n    <ContactListItem>\n      <p>{name}</p>\n      <p>{number}</p>\n      <button\n        type=\"button\"\n        onClick={handleDelete}\n        disabled={isDeleting && 'disabled'}\n      >\n        {isDeleting ? 'Deleting...' : 'Delete'}\n      </button>\n    </ContactListItem>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\nexport const Title = styled.h1`\n  display: flex;\n  justify-content: center;\n`;\n","import { useSelector } from 'react-redux';\nimport { getFilterList } from 'redux/selectors';\nimport Contact from 'components/ContactList/Contact/Contact';\nimport {\n  ContactsList,\n  Title,\n} from 'components/ContactList/ContactsList.styled';\nexport default function ContactList() {\n  const filterList = useSelector(getFilterList);\n\n  return filterList.length === 0 ? (\n    <Title>⚠️ There is not any contacts. ⚠️</Title>\n  ) : (\n    <ContactsList>\n      {filterList.map(({ id, name, number }) => {\n        return <Contact key={id} id={id} name={name} number={number} />;\n      })}\n    </ContactsList>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  /* width: 100px; */\n  display: flex;\n  justify-content: center;\n  align-items: flex-end;\n  gap: 10px;\n  background: transparent;\n\n  label {\n    display: block;\n    margin-bottom: 5px;\n    font-size: 20px;\n  }\n  input {\n    width: 250px;\n\n    font-size: 14px;\n\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: 4px;\n    background-color: transparent;\n    padding: 5px;\n    outline: none;\n    transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:focus {\n      border-color: #2196f3;\n    }\n  }\n  button {\n    padding: 6px 5px;\n    border: none;\n    border-radius: 4px;\n    min-width: 90px;\n    /* height: 50px; */\n\n    background-color: #2196f3;\n    color: #ffffff;\n    font-family: inherit;\n    font-weight: 500;\n    font-size: 14px;\n\n    text-align: center;\n\n    cursor: pointer;\n\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n      box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:hover,\n    &:focus {\n      background-color: #2196f3;\n      color: #ffffff;\n      box-shadow: 0px 3px 1px rgba(0, 0, 0, 0.1),\n        0px 1px 2px rgba(0, 0, 0, 0.08), 0px 2px 2px rgba(0, 0, 0, 0.12);\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form } from 'components/ContactForm/ContactForm.styled';\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = { name, number };\n    for (let item of contacts) {\n      if (contact.name.toLowerCase() === item.name.toLowerCase()) {\n        alert(`${contact.name} is already in contacts`);\n        resetForm();\n        return;\n      }\n    }\n    dispatch(addContact(contact));\n    resetForm();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <div>\n        <label>Name</label>\n        <input\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </div>\n\n      <div>\n        <label>Number</label>\n        <input\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </div>\n\n      <button type=\"submit\">Add contact</button>\n    </Form>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-right: 10px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 5px;\n  /* margin-top: 50px; */\n  /* margin-bottom: 20px; */\n\n  label {\n    display: block;\n    margin-bottom: 5px;\n    font-size: 20px;\n  }\n  input {\n    width: 250px;\n\n    font-size: 14px;\n\n    border: 1px solid rgba(33, 33, 33, 0.2);\n    border-radius: 4px;\n    background-color: transparent;\n    padding: 5px;\n    outline: none;\n    transition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    &:focus {\n      border-color: #2196f3;\n    }\n  }\n`;\n","import { Container } from 'components/Filter/Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleOnChange = e => dispatch(setFilter(e.target.value));\n\n  return (\n    <Container>\n      <div>\n        <label htmlFor={filter}>Find contacts by name</label>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleOnChange}\n        />\n      </div>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\nexport const Div = styled.div``;\nexport const DivTitle = styled.div`\n  display: flex;\n  margin-bottom: 10px;\n`;\nexport const Title = styled.p`\n  font-weight: 900;\n  letter-spacing: 1.5px;\n  color: #333;\n  font-size: 23px;\n  text-transform: uppercase;\n  &:not(:first-child) {\n    padding-left: 350px;\n  }\n`;\nexport const Header = styled.p`\n  display: flex;\n  justify-content: center;\n  font-weight: 900;\n  letter-spacing: 1.5px;\n  color: #333;\n  font-size: 23px;\n  text-transform: uppercase;\n  margin: 0;\n`;\n\nexport const Section = styled.section`\n  display: flex;\n  /* max-width: 992px; */\n  /* flex-wrap: wrap; */\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  padding: 10px;\n  margin-bottom: 20px;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Div, Header, Section, Title, DivTitle } from './ContactEditor.styled';\n\nexport const ContactEditor = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <Div>\n      <Header>add new contact:</Header>\n      <Section>\n        {contacts.length > 0 && <Filter />}\n        <ContactForm />\n        {isLoading && !error && <Loader />}\n      </Section>\n      {contacts.length > 0 && (\n        <DivTitle>\n          <Title>Name</Title>\n          <Title>Number</Title>\n        </DivTitle>\n      )}\n    </Div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport ContactList from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactEditor />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filters","getFilterList","filter","normalizedFilter","toLowerCase","includes","ContactListItem","styled","Contact","id","number","dispatch","useDispatch","useState","isDeleting","setIsDeleting","type","onClick","deleteContact","disabled","ContactsList","Title","ContactList","filterList","useSelector","Form","ContactForm","setName","setNumber","resetForm","handleChange","evt","target","onSubmit","e","preventDefault","contact","item","alert","addContact","onChange","pattern","title","required","Container","Filter","htmlFor","setFilter","Div","DivTitle","Header","Section","ContactEditor","Loader","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}